/**********************************************************
    Following is the Binary Tree Node class structure.

    template <typename T>
    class BinaryTreeNode {
    public :
	    T data;
	    BinaryTreeNode<T> *left;
	    BinaryTreeNode<T> *right;

	    BinaryTreeNode(T data) {
	        this -> data = data;
	        left = NULL;
	        right = NULL;
	    }
    };

***********************************************************/
void findDiagonal(vector<int>&ans, BinaryTreeNode<int>* root){
    
    if(!root) return;
    queue<BinaryTreeNode<int>*>q;
    q.push(root);
    while(!q.empty()){
        BinaryTreeNode<int>* frt = q.front();
        q.pop();
        while(frt){
            if(frt->left) q.push(frt->left);
            ans.emplace_back(frt->data);
            frt=frt->right;
        }
    } 
}
bool diagonalAnagram(BinaryTreeNode<int>* root1, BinaryTreeNode<int>* root2) {
    // Write your code here.
    vector<int>ans1, ans2;
    findDiagonal(ans1,root1);
    findDiagonal(ans2,root2);
    sort(ans1.begin(), ans1.end());
    sort(ans2.begin(), ans2.end());
    
    return ans1==ans2;
}
